// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.neerogi.domain;

import java.util.Calendar;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.neerogi.domain.Consultation;
import org.neerogi.domain.FollowUp;
import org.neerogi.domain.Investigation;
import org.neerogi.domain.MedicalCondition;
import org.neerogi.domain.MedicalConditionSubType;
import org.neerogi.domain.MedicalConditionType;
import org.neerogi.domain.Patient;
import org.neerogi.domain.Treatment;
import org.springframework.format.annotation.DateTimeFormat;

privileged aspect MedicalCondition_Roo_DbManaged {
    
    @OneToMany(mappedBy = "medicalCondition", cascade = CascadeType.REMOVE)
    private Set<FollowUp> MedicalCondition.followUps;
    
    @OneToMany(mappedBy = "medicalCondition", cascade = CascadeType.ALL)
    private Set<Investigation> MedicalCondition.investigations;
    
    @OneToMany(mappedBy = "medicalCondition", cascade = CascadeType.ALL)
    private Set<Treatment> MedicalCondition.treatments;
    
    @ManyToOne
    @JoinColumn(name = "patient", referencedColumnName = "id", nullable = false)
    private Patient MedicalCondition.patient;
    
    @ManyToOne
    @JoinColumn(name = "medical_condition_type", referencedColumnName = "id", nullable = false)
    private MedicalConditionType MedicalCondition.medicalConditionType;
    
    @ManyToOne
    @JoinColumn(name = "medical_condition_sub_type", referencedColumnName = "id", nullable = false)
    private MedicalConditionSubType MedicalCondition.medicalConditionSubType;
    
    @ManyToOne
    @JoinColumn(name = "consultation", referencedColumnName = "id", nullable = false)
    private Consultation MedicalCondition.consultation;
    
    @Column(name = "name", length = 1000)
    @NotNull
    private String MedicalCondition.name;
    
    @Column(name = "description")
    private String MedicalCondition.description;
    
    @Column(name = "first_symptom_date")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar MedicalCondition.firstSymptomDate;
    
    @Column(name = "last_symptom_date")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar MedicalCondition.lastSymptomDate;
    
    public Set<FollowUp> MedicalCondition.getFollowUps() {
        return followUps;
    }
    
    public void MedicalCondition.setFollowUps(Set<FollowUp> followUps) {
        this.followUps = followUps;
    }
    
    public Set<Investigation> MedicalCondition.getInvestigations() {
        return investigations;
    }
    
    public void MedicalCondition.setInvestigations(Set<Investigation> investigations) {
        this.investigations = investigations;
    }
    
    public Set<Treatment> MedicalCondition.getTreatments() {
        return treatments;
    }
    
    public void MedicalCondition.setTreatments(Set<Treatment> treatments) {
        this.treatments = treatments;
    }
    
    public Patient MedicalCondition.getPatient() {
        return patient;
    }
    
    public void MedicalCondition.setPatient(Patient patient) {
        this.patient = patient;
    }
    
    public MedicalConditionType MedicalCondition.getMedicalConditionType() {
        return medicalConditionType;
    }
    
    public void MedicalCondition.setMedicalConditionType(MedicalConditionType medicalConditionType) {
        this.medicalConditionType = medicalConditionType;
    }
    
    public MedicalConditionSubType MedicalCondition.getMedicalConditionSubType() {
        return medicalConditionSubType;
    }
    
    public void MedicalCondition.setMedicalConditionSubType(MedicalConditionSubType medicalConditionSubType) {
        this.medicalConditionSubType = medicalConditionSubType;
    }
    
    public Consultation MedicalCondition.getConsultation() {
        return consultation;
    }
    
    public void MedicalCondition.setConsultation(Consultation consultation) {
        this.consultation = consultation;
    }
    
    public String MedicalCondition.getName() {
        return name;
    }
    
    public void MedicalCondition.setName(String name) {
        this.name = name;
    }
    
    public String MedicalCondition.getDescription() {
        return description;
    }
    
    public void MedicalCondition.setDescription(String description) {
        this.description = description;
    }
    
    public Calendar MedicalCondition.getFirstSymptomDate() {
        return firstSymptomDate;
    }
    
    public void MedicalCondition.setFirstSymptomDate(Calendar firstSymptomDate) {
        this.firstSymptomDate = firstSymptomDate;
    }
    
    public Calendar MedicalCondition.getLastSymptomDate() {
        return lastSymptomDate;
    }
    
    public void MedicalCondition.setLastSymptomDate(Calendar lastSymptomDate) {
        this.lastSymptomDate = lastSymptomDate;
    }
    
}
