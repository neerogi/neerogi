// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.neerogi.web;

import org.neerogi.domain.Allergy;
import org.neerogi.domain.AllergyType;
import org.neerogi.domain.Consultation;
import org.neerogi.domain.Doctor;
import org.neerogi.domain.DrugTreatment;
import org.neerogi.domain.FollowUp;
import org.neerogi.domain.Hospital;
import org.neerogi.domain.Investigation;
import org.neerogi.domain.MedicalCondition;
import org.neerogi.domain.MedicalConditionSubType;
import org.neerogi.domain.MedicalConditionType;
import org.neerogi.domain.Patient;
import org.neerogi.domain.ProcedureTreatment;
import org.neerogi.domain.SocialHistory;
import org.neerogi.domain.Treatment;
import org.neerogi.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Allergy, String> ApplicationConversionServiceFactoryBean.getAllergyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Allergy, java.lang.String>() {
            public String convert(Allergy allergy) {
                return new StringBuilder().append(allergy.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Allergy> ApplicationConversionServiceFactoryBean.getIdToAllergyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Allergy>() {
            public org.neerogi.domain.Allergy convert(java.lang.Integer id) {
                return Allergy.findAllergy(id);
            }
        };
    }
    
    public Converter<String, Allergy> ApplicationConversionServiceFactoryBean.getStringToAllergyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Allergy>() {
            public org.neerogi.domain.Allergy convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Allergy.class);
            }
        };
    }
    
    public Converter<AllergyType, String> ApplicationConversionServiceFactoryBean.getAllergyTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.AllergyType, java.lang.String>() {
            public String convert(AllergyType allergyType) {
                return new StringBuilder().append(allergyType.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, AllergyType> ApplicationConversionServiceFactoryBean.getIdToAllergyTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.AllergyType>() {
            public org.neerogi.domain.AllergyType convert(java.lang.Integer id) {
                return AllergyType.findAllergyType(id);
            }
        };
    }
    
    public Converter<String, AllergyType> ApplicationConversionServiceFactoryBean.getStringToAllergyTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.AllergyType>() {
            public org.neerogi.domain.AllergyType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), AllergyType.class);
            }
        };
    }
    
    public Converter<Integer, Consultation> ApplicationConversionServiceFactoryBean.getIdToConsultationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Consultation>() {
            public org.neerogi.domain.Consultation convert(java.lang.Integer id) {
                return Consultation.findConsultation(id);
            }
        };
    }
    
    public Converter<String, Consultation> ApplicationConversionServiceFactoryBean.getStringToConsultationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Consultation>() {
            public org.neerogi.domain.Consultation convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Consultation.class);
            }
        };
    }
    
    public Converter<Doctor, String> ApplicationConversionServiceFactoryBean.getDoctorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Doctor, java.lang.String>() {
            public String convert(Doctor doctor) {
                return new StringBuilder().append(doctor.getDesignation()).append(' ').append(doctor.getName()).append(' ').append(doctor.getRegistrationNo()).toString();
            }
        };
    }
    
    public Converter<Integer, Doctor> ApplicationConversionServiceFactoryBean.getIdToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Doctor>() {
            public org.neerogi.domain.Doctor convert(java.lang.Integer id) {
                return Doctor.findDoctor(id);
            }
        };
    }
    
    public Converter<String, Doctor> ApplicationConversionServiceFactoryBean.getStringToDoctorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Doctor>() {
            public org.neerogi.domain.Doctor convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Doctor.class);
            }
        };
    }
    
    public Converter<DrugTreatment, String> ApplicationConversionServiceFactoryBean.getDrugTreatmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.DrugTreatment, java.lang.String>() {
            public String convert(DrugTreatment drugTreatment) {
                return new StringBuilder().append(drugTreatment.getName()).append(' ').append(drugTreatment.getMedicalName()).append(' ').append(drugTreatment.getDose()).append(' ').append(drugTreatment.getFrequency()).toString();
            }
        };
    }
    
    public Converter<Integer, DrugTreatment> ApplicationConversionServiceFactoryBean.getIdToDrugTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.DrugTreatment>() {
            public org.neerogi.domain.DrugTreatment convert(java.lang.Integer id) {
                return DrugTreatment.findDrugTreatment(id);
            }
        };
    }
    
    public Converter<String, DrugTreatment> ApplicationConversionServiceFactoryBean.getStringToDrugTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.DrugTreatment>() {
            public org.neerogi.domain.DrugTreatment convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), DrugTreatment.class);
            }
        };
    }
    
    public Converter<FollowUp, String> ApplicationConversionServiceFactoryBean.getFollowUpToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.FollowUp, java.lang.String>() {
            public String convert(FollowUp followUp) {
                return new StringBuilder().append(followUp.getFollowUpConditionId()).toString();
            }
        };
    }
    
    public Converter<Integer, FollowUp> ApplicationConversionServiceFactoryBean.getIdToFollowUpConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.FollowUp>() {
            public org.neerogi.domain.FollowUp convert(java.lang.Integer id) {
                return FollowUp.findFollowUp(id);
            }
        };
    }
    
    public Converter<String, FollowUp> ApplicationConversionServiceFactoryBean.getStringToFollowUpConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.FollowUp>() {
            public org.neerogi.domain.FollowUp convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), FollowUp.class);
            }
        };
    }
    
    public Converter<Hospital, String> ApplicationConversionServiceFactoryBean.getHospitalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Hospital, java.lang.String>() {
            public String convert(Hospital hospital) {
                return new StringBuilder().append(hospital.getName()).append(' ').append(hospital.getAddress()).append(' ').append(hospital.getTelephone()).append(' ').append(hospital.getFax()).toString();
            }
        };
    }
    
    public Converter<Integer, Hospital> ApplicationConversionServiceFactoryBean.getIdToHospitalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Hospital>() {
            public org.neerogi.domain.Hospital convert(java.lang.Integer id) {
                return Hospital.findHospital(id);
            }
        };
    }
    
    public Converter<String, Hospital> ApplicationConversionServiceFactoryBean.getStringToHospitalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Hospital>() {
            public org.neerogi.domain.Hospital convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Hospital.class);
            }
        };
    }
    
    public Converter<Investigation, String> ApplicationConversionServiceFactoryBean.getInvestigationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Investigation, java.lang.String>() {
            public String convert(Investigation investigation) {
                return new StringBuilder().append(investigation.getName()).append(' ').append(investigation.getDescription()).append(' ').append(investigation.getPlannedDate()).append(' ').append(investigation.getActualDate()).toString();
            }
        };
    }
    
    public Converter<Integer, Investigation> ApplicationConversionServiceFactoryBean.getIdToInvestigationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Investigation>() {
            public org.neerogi.domain.Investigation convert(java.lang.Integer id) {
                return Investigation.findInvestigation(id);
            }
        };
    }
    
    public Converter<String, Investigation> ApplicationConversionServiceFactoryBean.getStringToInvestigationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Investigation>() {
            public org.neerogi.domain.Investigation convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Investigation.class);
            }
        };
    }
    
    public Converter<Integer, MedicalCondition> ApplicationConversionServiceFactoryBean.getIdToMedicalConditionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.MedicalCondition>() {
            public org.neerogi.domain.MedicalCondition convert(java.lang.Integer id) {
                return MedicalCondition.findMedicalCondition(id);
            }
        };
    }
    
    public Converter<String, MedicalCondition> ApplicationConversionServiceFactoryBean.getStringToMedicalConditionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.MedicalCondition>() {
            public org.neerogi.domain.MedicalCondition convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), MedicalCondition.class);
            }
        };
    }
    
    public Converter<MedicalConditionSubType, String> ApplicationConversionServiceFactoryBean.getMedicalConditionSubTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.MedicalConditionSubType, java.lang.String>() {
            public String convert(MedicalConditionSubType medicalConditionSubType) {
                return new StringBuilder().append(medicalConditionSubType.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, MedicalConditionSubType> ApplicationConversionServiceFactoryBean.getIdToMedicalConditionSubTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.MedicalConditionSubType>() {
            public org.neerogi.domain.MedicalConditionSubType convert(java.lang.Integer id) {
                return MedicalConditionSubType.findMedicalConditionSubType(id);
            }
        };
    }
    
    public Converter<String, MedicalConditionSubType> ApplicationConversionServiceFactoryBean.getStringToMedicalConditionSubTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.MedicalConditionSubType>() {
            public org.neerogi.domain.MedicalConditionSubType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), MedicalConditionSubType.class);
            }
        };
    }
    
    public Converter<MedicalConditionType, String> ApplicationConversionServiceFactoryBean.getMedicalConditionTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.MedicalConditionType, java.lang.String>() {
            public String convert(MedicalConditionType medicalConditionType) {
                return new StringBuilder().append(medicalConditionType.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, MedicalConditionType> ApplicationConversionServiceFactoryBean.getIdToMedicalConditionTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.MedicalConditionType>() {
            public org.neerogi.domain.MedicalConditionType convert(java.lang.Integer id) {
                return MedicalConditionType.findMedicalConditionType(id);
            }
        };
    }
    
    public Converter<String, MedicalConditionType> ApplicationConversionServiceFactoryBean.getStringToMedicalConditionTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.MedicalConditionType>() {
            public org.neerogi.domain.MedicalConditionType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), MedicalConditionType.class);
            }
        };
    }
    
    public Converter<Patient, String> ApplicationConversionServiceFactoryBean.getPatientToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Patient, java.lang.String>() {
            public String convert(Patient patient) {
                return new StringBuilder().append(patient.getName()).append(' ').append(patient.getAddress()).append(' ').append(patient.getGender()).append(' ').append(patient.getOccupation()).toString();
            }
        };
    }
    
    public Converter<Integer, Patient> ApplicationConversionServiceFactoryBean.getIdToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Patient>() {
            public org.neerogi.domain.Patient convert(java.lang.Integer id) {
                return Patient.findPatient(id);
            }
        };
    }
    
    public Converter<String, Patient> ApplicationConversionServiceFactoryBean.getStringToPatientConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Patient>() {
            public org.neerogi.domain.Patient convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Patient.class);
            }
        };
    }
    
    public Converter<ProcedureTreatment, String> ApplicationConversionServiceFactoryBean.getProcedureTreatmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.ProcedureTreatment, java.lang.String>() {
            public String convert(ProcedureTreatment procedureTreatment) {
                return new StringBuilder().append(procedureTreatment.getName()).append(' ').append(procedureTreatment.getDescription()).append(' ').append(procedureTreatment.getDuration()).toString();
            }
        };
    }
    
    public Converter<Integer, ProcedureTreatment> ApplicationConversionServiceFactoryBean.getIdToProcedureTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.ProcedureTreatment>() {
            public org.neerogi.domain.ProcedureTreatment convert(java.lang.Integer id) {
                return ProcedureTreatment.findProcedureTreatment(id);
            }
        };
    }
    
    public Converter<String, ProcedureTreatment> ApplicationConversionServiceFactoryBean.getStringToProcedureTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.ProcedureTreatment>() {
            public org.neerogi.domain.ProcedureTreatment convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), ProcedureTreatment.class);
            }
        };
    }
    
    public Converter<SocialHistory, String> ApplicationConversionServiceFactoryBean.getSocialHistoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.SocialHistory, java.lang.String>() {
            public String convert(SocialHistory socialHistory) {
                return new StringBuilder().append(socialHistory.getType()).append(' ').append(socialHistory.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, SocialHistory> ApplicationConversionServiceFactoryBean.getIdToSocialHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.SocialHistory>() {
            public org.neerogi.domain.SocialHistory convert(java.lang.Integer id) {
                return SocialHistory.findSocialHistory(id);
            }
        };
    }
    
    public Converter<String, SocialHistory> ApplicationConversionServiceFactoryBean.getStringToSocialHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.SocialHistory>() {
            public org.neerogi.domain.SocialHistory convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SocialHistory.class);
            }
        };
    }
    
    public Converter<Treatment, String> ApplicationConversionServiceFactoryBean.getTreatmentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.neerogi.domain.Treatment, java.lang.String>() {
            public String convert(Treatment treatment) {
                return new StringBuilder().append(treatment.getName()).append(' ').append(treatment.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Treatment> ApplicationConversionServiceFactoryBean.getIdToTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.neerogi.domain.Treatment>() {
            public org.neerogi.domain.Treatment convert(java.lang.Integer id) {
                return Treatment.findTreatment(id);
            }
        };
    }
    
    public Converter<String, Treatment> ApplicationConversionServiceFactoryBean.getStringToTreatmentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.neerogi.domain.Treatment>() {
            public org.neerogi.domain.Treatment convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Treatment.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAllergyToStringConverter());
        registry.addConverter(getIdToAllergyConverter());
        registry.addConverter(getStringToAllergyConverter());
        registry.addConverter(getAllergyTypeToStringConverter());
        registry.addConverter(getIdToAllergyTypeConverter());
        registry.addConverter(getStringToAllergyTypeConverter());
        registry.addConverter(getConsultationToStringConverter());
        registry.addConverter(getIdToConsultationConverter());
        registry.addConverter(getStringToConsultationConverter());
        registry.addConverter(getDoctorToStringConverter());
        registry.addConverter(getIdToDoctorConverter());
        registry.addConverter(getStringToDoctorConverter());
        registry.addConverter(getDrugTreatmentToStringConverter());
        registry.addConverter(getIdToDrugTreatmentConverter());
        registry.addConverter(getStringToDrugTreatmentConverter());
        registry.addConverter(getFollowUpToStringConverter());
        registry.addConverter(getIdToFollowUpConverter());
        registry.addConverter(getStringToFollowUpConverter());
        registry.addConverter(getHospitalToStringConverter());
        registry.addConverter(getIdToHospitalConverter());
        registry.addConverter(getStringToHospitalConverter());
        registry.addConverter(getInvestigationToStringConverter());
        registry.addConverter(getIdToInvestigationConverter());
        registry.addConverter(getStringToInvestigationConverter());
        registry.addConverter(getMedicalConditionToStringConverter());
        registry.addConverter(getIdToMedicalConditionConverter());
        registry.addConverter(getStringToMedicalConditionConverter());
        registry.addConverter(getMedicalConditionSubTypeToStringConverter());
        registry.addConverter(getIdToMedicalConditionSubTypeConverter());
        registry.addConverter(getStringToMedicalConditionSubTypeConverter());
        registry.addConverter(getMedicalConditionTypeToStringConverter());
        registry.addConverter(getIdToMedicalConditionTypeConverter());
        registry.addConverter(getStringToMedicalConditionTypeConverter());
        registry.addConverter(getPatientToStringConverter());
        registry.addConverter(getIdToPatientConverter());
        registry.addConverter(getStringToPatientConverter());
        registry.addConverter(getProcedureTreatmentToStringConverter());
        registry.addConverter(getIdToProcedureTreatmentConverter());
        registry.addConverter(getStringToProcedureTreatmentConverter());
        registry.addConverter(getSocialHistoryToStringConverter());
        registry.addConverter(getIdToSocialHistoryConverter());
        registry.addConverter(getStringToSocialHistoryConverter());
        registry.addConverter(getTreatmentToStringConverter());
        registry.addConverter(getIdToTreatmentConverter());
        registry.addConverter(getStringToTreatmentConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
